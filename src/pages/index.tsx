import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
import { type RouterOutputs, api } from "~/utils/api";
import Image from 'next/image';

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user }= useUser();

  if (!user) {
    return null;
  }

  return (
    <div className='flex gap-3 w-full border-b border-slate-400 p-4'>
        <Image
          className='rounded-full'
          src={user.profileImageUrl} 
          alt='Profile image'
          width={56}
          height={56}/>
        <input
          placeholder='Type something'
          className='bg-transparent grow outline-none'
        />
    </div>
  )
}

type PostWithUser = RouterOutputs['posts']['getAll'][number];

const PostView = (props: PostWithUser) => {
  const displayDate = dayjs(props.post.createdAt).fromNow();
  return <div key={props.post.id} className='border-b border-slate-400 p-4 flex items-center gap-3'>
    <Image
      className='rounded-full'
      src={props.author?.profileImageUrl} 
      alt='Profile image'
      width={56}
      height={56}/>
    <div>
      <div>
        <strong>
          {`@${props.author?.username}`}
        </strong>
        <span className='font-thin'>{` Â· ${displayDate}`}</span> 
      </div>
      <div>
        {props.post.content}
      </div>
    </div>   
</div>
}

const Home: NextPage = () => {
  const user = useUser();

  const {data, isLoading} = api.posts.getAll.useQuery();

  if (isLoading) {
    return <div>Is loading...</div>
  }

  if (!data) {
    return <div>Something went wrong, called Arturo!</div>
  }
  //console.log(user);
  console.log(data);
  return (
    <>
      <Head>
        <title>Arturo app</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico'/>
      </Head>
      <main className='flex justify-center h-screen '>
        <div className='w-full h-full md:max-w-2xl border-x border-slate-400'>
          <SignIn path='/sign-in' routing='path' signUpUrl='/sign-up' />
          <div className='flex justify-between items-center border-b border-slate-400 p-4'>
            <h1>Welcome {user.isSignedIn && user.user.firstName}</h1>
            {!user.isSignedIn 
              ?<SignInButton><button className='bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded'>Sign in</button></SignInButton>
              : <SignOutButton><button className='bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded'>Sign out</button></SignOutButton>}  
          </div>   
          <CreatePostWizard/>

          <div className='flex flex-col'>
            {data?.map(({post, author}) => (<PostView key={post.id} post={post} author={author}/>))}
          </div>   
        </div>      
      </main>
    </>
  );
};

export default Home;
